{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst handlePending = state => {\n  // state.isLoading = true;\n};\nconst handleError = (state, action) => {\n  // state.isLoading = false;\n  // state.error = action.payload;\n};\nexport const trailersSlice = createSlice({\n  name: 'trailers',\n  initialState: {\n    items: [],\n    favorite: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {}\n  //   extraReducers: builder => {\n  //     builder\n  //       .addCase(fetchContacts.pending, handlePending)\n  //       .addCase(fetchContacts.fulfilled, (state, action) => {\n  //         state.isLoading = false;\n  //         state.error = null;\n  //         state.items = action.payload;\n  //       })\n  //       .addCase(fetchContacts.rejected, handleError)\n  //       .addCase(addContact.pending, handlePending)\n  //       .addCase(addContact.fulfilled, (state, action) => {\n  //         state.isLoading = false;\n  //         state.error = null;\n  //         state.items.push(action.payload);\n  //       })\n  //       .addCase(addContact.rejected, handleError)\n  //       .addCase(deleteContact.pending, handlePending)\n  //       .addCase(deleteContact.fulfilled, (state, action) => {\n  //         state.isLoading = false;\n  //         state.error = null;\n  //         const index = state.items.findIndex(\n  //           contact => contact.id === action.payload.id\n  //         );\n  //         state.items.splice(index, 1);\n  //       })\n  //       .addCase(deleteContact.rejected, handleError);\n  //   },\n});","map":{"version":3,"names":["createSlice","handlePending","state","handleError","action","trailersSlice","name","initialState","items","favorite","isLoading","error","reducers"],"sources":["C:/GOIT/Projects/trailers-app/src/redux/trailersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst handlePending = state => {\r\n // state.isLoading = true;\r\n};\r\nconst handleError = (state, action) => {\r\n // state.isLoading = false;\r\n // state.error = action.payload;\r\n};\r\n\r\nexport const trailersSlice = createSlice({\r\n  name: 'trailers',\r\n  initialState: {\r\n    items: [],\r\n    favorite: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {}\r\n//   extraReducers: builder => {\r\n//     builder\r\n//       .addCase(fetchContacts.pending, handlePending)\r\n//       .addCase(fetchContacts.fulfilled, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.error = null;\r\n//         state.items = action.payload;\r\n//       })\r\n//       .addCase(fetchContacts.rejected, handleError)\r\n//       .addCase(addContact.pending, handlePending)\r\n//       .addCase(addContact.fulfilled, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.error = null;\r\n//         state.items.push(action.payload);\r\n//       })\r\n//       .addCase(addContact.rejected, handleError)\r\n//       .addCase(deleteContact.pending, handlePending)\r\n//       .addCase(deleteContact.fulfilled, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.error = null;\r\n//         const index = state.items.findIndex(\r\n//           contact => contact.id === action.payload.id\r\n//         );\r\n//         state.items.splice(index, 1);\r\n//       })\r\n//       .addCase(deleteContact.rejected, handleError);\r\n//   },\r\n});"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC9B;AAAA,CACA;AACD,MAAMC,WAAW,GAAGA,CAACD,KAAK,EAAEE,MAAM,KAAK;EACtC;EACA;AAAA,CACA;AAED,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCM,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}